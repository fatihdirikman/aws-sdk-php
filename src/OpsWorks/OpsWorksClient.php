<?php
namespace Aws\OpsWorks;

use Aws\AwsClient;

/**
 * This client is used to interact with the **AWS OpsWorks** service.
 *
 * @method \Aws\Result assignInstance(array $args = [])
 * @method \Aws\Result assignVolume(array $args = [])
 * @method \Aws\Result associateElasticIp(array $args = [])
 * @method \Aws\Result attachElasticLoadBalancer(array $args = [])
 * @method \Aws\Result cloneStack(array $args = [])
 * @method \Aws\Result createApp(array $args = [])
 * @method \Aws\Result createDeployment(array $args = [])
 * @method \Aws\Result createInstance(array $args = [])
 * @method \Aws\Result createLayer(array $args = [])
 * @method \Aws\Result createStack(array $args = [])
 * @method \Aws\Result createUserProfile(array $args = [])
 * @method \Aws\Result deleteApp(array $args = [])
 * @method \Aws\Result deleteInstance(array $args = [])
 * @method \Aws\Result deleteLayer(array $args = [])
 * @method \Aws\Result deleteStack(array $args = [])
 * @method \Aws\Result deleteUserProfile(array $args = [])
 * @method \Aws\Result deregisterEcsCluster(array $args = [])
 * @method \Aws\Result deregisterElasticIp(array $args = [])
 * @method \Aws\Result deregisterInstance(array $args = [])
 * @method \Aws\Result deregisterRdsDbInstance(array $args = [])
 * @method \Aws\Result deregisterVolume(array $args = [])
 * @method \Aws\Result describeAgentVersions(array $args = [])
 * @method \Aws\Result describeApps(array $args = [])
 * @method \Aws\Result describeCommands(array $args = [])
 * @method \Aws\Result describeDeployments(array $args = [])
 * @method \Aws\Result describeEcsClusters(array $args = [])
 * @method \Aws\Result describeElasticIps(array $args = [])
 * @method \Aws\Result describeElasticLoadBalancers(array $args = [])
 * @method \Aws\Result describeInstances(array $args = [])
 * @method \Aws\Result describeLayers(array $args = [])
 * @method \Aws\Result describeLoadBasedAutoScaling(array $args = [])
 * @method \Aws\Result describeMyUserProfile(array $args = [])
 * @method \Aws\Result describePermissions(array $args = [])
 * @method \Aws\Result describeRaidArrays(array $args = [])
 * @method \Aws\Result describeRdsDbInstances(array $args = [])
 * @method \Aws\Result describeServiceErrors(array $args = [])
 * @method \Aws\Result describeStackProvisioningParameters(array $args = [])
 * @method \Aws\Result describeStackSummary(array $args = [])
 * @method \Aws\Result describeStacks(array $args = [])
 * @method \Aws\Result describeTimeBasedAutoScaling(array $args = [])
 * @method \Aws\Result describeUserProfiles(array $args = [])
 * @method \Aws\Result describeVolumes(array $args = [])
 * @method \Aws\Result detachElasticLoadBalancer(array $args = [])
 * @method \Aws\Result disassociateElasticIp(array $args = [])
 * @method \Aws\Result getHostnameSuggestion(array $args = [])
 * @method \Aws\Result grantAccess(array $args = [])
 * @method \Aws\Result rebootInstance(array $args = [])
 * @method \Aws\Result registerEcsCluster(array $args = [])
 * @method \Aws\Result registerElasticIp(array $args = [])
 * @method \Aws\Result registerInstance(array $args = [])
 * @method \Aws\Result registerRdsDbInstance(array $args = [])
 * @method \Aws\Result registerVolume(array $args = [])
 * @method \Aws\Result setLoadBasedAutoScaling(array $args = [])
 * @method \Aws\Result setPermission(array $args = [])
 * @method \Aws\Result setTimeBasedAutoScaling(array $args = [])
 * @method \Aws\Result startInstance(array $args = [])
 * @method \Aws\Result startStack(array $args = [])
 * @method \Aws\Result stopInstance(array $args = [])
 * @method \Aws\Result stopStack(array $args = [])
 * @method \Aws\Result unassignInstance(array $args = [])
 * @method \Aws\Result unassignVolume(array $args = [])
 * @method \Aws\Result updateApp(array $args = [])
 * @method \Aws\Result updateElasticIp(array $args = [])
 * @method \Aws\Result updateInstance(array $args = [])
 * @method \Aws\Result updateLayer(array $args = [])
 * @method \Aws\Result updateMyUserProfile(array $args = [])
 * @method \Aws\Result updateRdsDbInstance(array $args = [])
 * @method \Aws\Result updateStack(array $args = [])
 * @method \Aws\Result updateUserProfile(array $args = [])
 * @method \Aws\Result updateVolume(array $args = [])
 */
class OpsWorksClient extends AwsClient {}
