<?php
namespace Aws\StorageGateway;

use Aws\AwsClient;

/**
 * AWS Storage Gateway client.
 *
 * @method \Aws\Result activateGateway(array $args = [])
 * @method \Aws\Result addCache(array $args = [])
 * @method \Aws\Result addTagsToResource(array $args = [])
 * @method \Aws\Result addUploadBuffer(array $args = [])
 * @method \Aws\Result addWorkingStorage(array $args = [])
 * @method \Aws\Result cancelArchival(array $args = [])
 * @method \Aws\Result cancelRetrieval(array $args = [])
 * @method \Aws\Result createCachediSCSIVolume(array $args = [])
 * @method \Aws\Result createSnapshot(array $args = [])
 * @method \Aws\Result createSnapshotFromVolumeRecoveryPoint(array $args = [])
 * @method \Aws\Result createStorediSCSIVolume(array $args = [])
 * @method \Aws\Result createTapes(array $args = [])
 * @method \Aws\Result deleteBandwidthRateLimit(array $args = [])
 * @method \Aws\Result deleteChapCredentials(array $args = [])
 * @method \Aws\Result deleteGateway(array $args = [])
 * @method \Aws\Result deleteSnapshotSchedule(array $args = [])
 * @method \Aws\Result deleteTape(array $args = [])
 * @method \Aws\Result deleteTapeArchive(array $args = [])
 * @method \Aws\Result deleteVolume(array $args = [])
 * @method \Aws\Result describeBandwidthRateLimit(array $args = [])
 * @method \Aws\Result describeCache(array $args = [])
 * @method \Aws\Result describeCachediSCSIVolumes(array $args = [])
 * @method \Aws\Result describeChapCredentials(array $args = [])
 * @method \Aws\Result describeGatewayInformation(array $args = [])
 * @method \Aws\Result describeMaintenanceStartTime(array $args = [])
 * @method \Aws\Result describeSnapshotSchedule(array $args = [])
 * @method \Aws\Result describeStorediSCSIVolumes(array $args = [])
 * @method \Aws\Result describeTapeArchives(array $args = [])
 * @method \Aws\Result describeTapeRecoveryPoints(array $args = [])
 * @method \Aws\Result describeTapes(array $args = [])
 * @method \Aws\Result describeUploadBuffer(array $args = [])
 * @method \Aws\Result describeVTLDevices(array $args = [])
 * @method \Aws\Result describeWorkingStorage(array $args = [])
 * @method \Aws\Result disableGateway(array $args = [])
 * @method \Aws\Result listGateways(array $args = [])
 * @method \Aws\Result listLocalDisks(array $args = [])
 * @method \Aws\Result listTagsForResource(array $args = [])
 * @method \Aws\Result listVolumeInitiators(array $args = [])
 * @method \Aws\Result listVolumeRecoveryPoints(array $args = [])
 * @method \Aws\Result listVolumes(array $args = [])
 * @method \Aws\Result removeTagsFromResource(array $args = [])
 * @method \Aws\Result resetCache(array $args = [])
 * @method \Aws\Result retrieveTapeArchive(array $args = [])
 * @method \Aws\Result retrieveTapeRecoveryPoint(array $args = [])
 * @method \Aws\Result shutdownGateway(array $args = [])
 * @method \Aws\Result startGateway(array $args = [])
 * @method \Aws\Result updateBandwidthRateLimit(array $args = [])
 * @method \Aws\Result updateChapCredentials(array $args = [])
 * @method \Aws\Result updateGatewayInformation(array $args = [])
 * @method \Aws\Result updateGatewaySoftwareNow(array $args = [])
 * @method \Aws\Result updateMaintenanceStartTime(array $args = [])
 * @method \Aws\Result updateSnapshotSchedule(array $args = [])
 * @method \Aws\Result updateVTLDeviceType(array $args = [])
 */
class StorageGatewayClient extends AwsClient {}
